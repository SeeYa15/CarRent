// <auto-generated />
using System;
using JetShop_CarRent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JetShop_CarRent.Migrations
{
    [DbContext(typeof(CarRentalDBContext))]
    [Migration("20210418164752_Initialize_DB")]
    partial class Initialize_DB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JetShop_CarRent.Modells.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CarModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRented")
                        .HasColumnType("bit");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5bfa21d-d459-41d1-a715-fa6f74b374ee"),
                            CarModel = "Volvo 740",
                            IsRented = false,
                            Mileage = 27000
                        },
                        new
                        {
                            Id = new Guid("c655bdc4-94b7-472a-a065-663160ac1c66"),
                            CarModel = "Volvo V60",
                            IsRented = false,
                            Mileage = 10300
                        },
                        new
                        {
                            Id = new Guid("d793a92e-c704-4434-b219-b13f145176ca"),
                            CarModel = "Audi TT",
                            IsRented = false,
                            Mileage = 5600
                        },
                        new
                        {
                            Id = new Guid("ef8c5415-d3f8-4869-9788-7c15d5682be0"),
                            CarModel = "Audi Q4",
                            IsRented = false,
                            Mileage = 5123
                        },
                        new
                        {
                            Id = new Guid("9b69147e-c6b0-4f03-af79-e4c01584bda5"),
                            CarModel = "Toyota Yaris",
                            IsRented = false,
                            Mileage = 12551
                        },
                        new
                        {
                            Id = new Guid("a1bc58cf-3d01-457e-abd5-89845ae20714"),
                            CarModel = "Toyota Rav4",
                            IsRented = false,
                            Mileage = 125345
                        },
                        new
                        {
                            Id = new Guid("0e1fabc3-68fa-491e-9223-793efd4f8c4e"),
                            CarModel = "Volvo V40",
                            IsRented = false,
                            Mileage = 23561
                        },
                        new
                        {
                            Id = new Guid("32bc6d56-a17c-485f-bacb-fbcc0eb6eafa"),
                            CarModel = "Dodge Charger",
                            IsRented = false,
                            Mileage = 3451
                        },
                        new
                        {
                            Id = new Guid("1b8f4207-e872-4f87-bce0-bd9adc8bce6f"),
                            CarModel = "Lamborghini Gallardo",
                            IsRented = false,
                            Mileage = 8123
                        });
                });

            modelBuilder.Entity("JetShop_CarRent.Modells.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SocialSercurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("JetShop_CarRent.Modells.Resevation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BookingNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RentalCategory")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Resevations");
                });

            modelBuilder.Entity("JetShop_CarRent.Modells.Resevation", b =>
                {
                    b.HasOne("JetShop_CarRent.Modells.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });
#pragma warning restore 612, 618
        }
    }
}
